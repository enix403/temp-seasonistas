name: Build and Deploy Application

on:
  push:
    branches:
      - deploy

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Load environment variables
        id: load-env
        run: |
          source .github/env
          echo "NODE_VERSION=$NODE_VERSION" >> $GITHUB_ENV
      - name: Set executable permissions for certbot-entrypoint.sh
        run: chmod +x ./certbot-entrypoint.sh

      - name: Set environment variables from GitHub Secrets
        id: load-secrets
        run: |
          echo "VPS_USER=${{ secrets.VPS_USER }}" >> $GITHUB_ENV
          echo "VPS_PASSWORD=${{ secrets.VPS_PASSWORD }}" >> $GITHUB_ENV
          echo "VPS_HOST=${{ secrets.VPS_HOST }}" >> $GITHUB_ENV
          echo "FULLCHAIN=${{ secrets.FULLCHAIN }}" >> $GITHUB_ENV
          echo "PRIVKEY=${{ secrets.PRIVKEY }}" >> $GITHUB_ENV
          echo "JWT_SIGNING_KEY=${{ secrets.JWT_SIGNING_KEY }}" >> $GITHUB_ENV
          echo "" >> .env # Add a blank line for readability
          echo "# Appended secrets from GitHub Actions" >> .env
          echo "JWT_SIGNING_KEY=\"${{ secrets.JWT_SIGNING_KEY }}\"" >> .env
          

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker images
        run: |
          docker build -t seasonistas-frontend:latest ./client
          docker build -t seasonistas-backend:latest ./server

      - name: Save Docker images to tar files
        run: |
          docker save -o seasonistas-frontend.tar seasonistas-frontend:latest
          docker save -o seasonistas-backend.tar seasonistas-backend:latest

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Transfer images to server using password
        run: |
          sshpass -p "$VPS_PASSWORD" scp -o StrictHostKeyChecking=no seasonistas-frontend.tar $VPS_USER@$VPS_HOST:/tmp/
          sshpass -p "$VPS_PASSWORD" scp -o StrictHostKeyChecking=no seasonistas-backend.tar $VPS_USER@$VPS_HOST:/tmp/
      - name: Create SSL folder and save keys
        run: |
          mkdir -p ssl
          echo "${{ secrets.PRIVKEY }}" | base64 --decode > ssl/privkey.pem
          echo "${{ secrets.FULLCHAIN }}" | base64 --decode > ssl/fullchain.pem
          
      - name: Transfer scripts to VPS
        run: |
          sshpass -p "$VPS_PASSWORD" scp -o StrictHostKeyChecking=no docker-compose-vps.yaml $VPS_USER@$VPS_HOST:/root/
          sshpass -p "$VPS_PASSWORD" scp -o StrictHostKeyChecking=no .env $VPS_USER@$VPS_HOST:/root/
          sshpass -p "$VPS_PASSWORD" scp -o StrictHostKeyChecking=no nginx.conf $VPS_USER@$VPS_HOST:/root/
          sshpass -p "$VPS_PASSWORD" scp -o StrictHostKeyChecking=no certbot-entrypoint.sh $VPS_USER@$VPS_HOST:/root/
          # Transfer SSL certificates
          sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST "mkdir -p /root/ssl"
          sshpass -p "$VPS_PASSWORD" scp -o StrictHostKeyChecking=no ssl/privkey.pem $VPS_USER@$VPS_HOST:/root/ssl/
          sshpass -p "$VPS_PASSWORD" scp -o StrictHostKeyChecking=no ssl/fullchain.pem $VPS_USER@$VPS_HOST:/root/ssl/
          
      
      - name: Load Docker images on VPS
        run: |
          sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST "docker load -i /tmp/seasonistas-frontend.tar"
          sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST "docker load -i /tmp/seasonistas-backend.tar"

      - name: Clean up local tar files
        run: |
          rm seasonistas-frontend.tar
          rm seasonistas-backend.tar

      - name: Restart Docker containers with docker-compose
        run: |
          sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST "cd /root && docker-compose -f docker-compose-vps.yaml down && docker-compose -f docker-compose-vps.yaml up -d"
